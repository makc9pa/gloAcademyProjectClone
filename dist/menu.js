(()=>{"use strict";var __webpack_modules__={941:()=>{eval("\n;// CONCATENATED MODULE: ./src/modules/auth.js\nconst auth = () => {\n    const buttonAuth = document.querySelector('.button-auth')\n    const buttonOut = document.querySelector('.button-out')\n    const modalAuth = document.querySelector('.modal-auth')\n    const userName = document.querySelector('.user-name')\n    const closeAuth = document.querySelector('.close-auth')\n    const logInForm = document.getElementById('logInForm')\n    const inputLogin = document.getElementById('login')\n    const inputPassword = document.getElementById('password')\n    const buttonCart = document.querySelector('.button-cart')\n\n\n    const login = (user) => {\n        buttonAuth.style.display = 'none'\n\n        buttonOut.style.display = 'flex'\n        userName.style.display = 'flex'\n        buttonCart.style.display = 'flex'\n\n        userName.textContent = user.login\n        modalAuth.style.display = 'none'\n    }\n\n    const logOut = () => {\n        buttonAuth.style.display = 'flex'\n\n        buttonOut.style.display = 'none'\n        userName.style.display = 'none'\n        buttonCart.style.display = 'none'\n\n        localStorage.removeItem('user')\n    }\n\n    buttonAuth.addEventListener('click', () => {\n        modalAuth.style.display = 'flex'\n    })\n\n    closeAuth.addEventListener('click', () => {\n        modalAuth.style.display = 'none'\n    })\n\n    buttonOut.addEventListener('click', () => {\n        logOut()\n    })\n\n    logInForm.addEventListener('submit', (event) => {\n        event.preventDefault()\n        if (inputLogin.value.trim() !== \"\") {\n            const user = {\n                login: inputLogin.value.replace(/\\s+/g, ''),\n                password: inputPassword.value\n            }\n            localStorage.setItem('user', JSON.stringify(user))\n            login(user)\n        } else {\n            alert(\"Введите логин пользователя\")\n        }\n    })\n\n    if (localStorage.getItem('user')) {\n        login(JSON.parse(localStorage.getItem('user')))\n    }\n}\n\n/* harmony default export */ const modules_auth = (auth);\n;// CONCATENATED MODULE: ./src/modules/cart.js\nconst cart = () => {\n    const buttonCart = document.getElementById('cart-button')\n    const modalCart = document.querySelector('.modal-cart')\n    const close = modalCart.querySelector('.close')\n    const body = modalCart.querySelector('.modal-body')\n    const buttonSend = modalCart.querySelector('.button-primary')\n    const clearCart = modalCart.querySelector('.clear-cart')\n    const modalPricetag = modalCart.querySelector('.modal-pricetag')\n\n    const resetCart = () => {\n        body.innerHTML = ''\n        localStorage.removeItem('cart')\n        modalCart.classList.remove('is-open')\n        modalPricetag.textContent = 0\n    }\n\n    const incrementCount = (id) => {\n        const cartArray = JSON.parse(localStorage.getItem('cart'))\n\n        cartArray.map((item) => {\n            if (item.id === id) {\n                item.count++\n            }\n\n            return item\n        })\n\n        localStorage.setItem('cart', JSON.stringify(cartArray))\n        renderItems(cartArray)\n        countTotalPrice(JSON.parse(localStorage.getItem('cart')))\n    }\n\n    const decrementCount = (id) => {\n        const cartArray = JSON.parse(localStorage.getItem('cart'))\n\n        cartArray.map((item) => {\n            if (item.id === id) {\n                item.count = item.count > 0 ? item.count - 1 : 0\n            }\n\n            return item\n        })\n\n        localStorage.setItem('cart', JSON.stringify(cartArray))\n        renderItems(cartArray)\n        countTotalPrice(JSON.parse(localStorage.getItem('cart')))\n    }\n\n    const renderItems = (data) => {\n        body.innerHTML = ''\n\n        data.forEach(({ name, price, id, count }) => {\n            const cartElem = document.createElement('div')\n            cartElem.classList.add('food-row')\n            cartElem.innerHTML = `\n                <span class=\"food-name\">${name}</span>\n                <strong class=\"food-price\">${price} ₽</strong>\n                <div class=\"food-counter\">\n                    <button class=\"counter-button btn-dec\" data-index=\"${id}\">-</button>\n                    <span class=\"counter\">${count}</span>\n                    <button class=\"counter-button btn-inc\" data-index=\"${id}\">+</button>\n                </div>\n            `\n            body.append(cartElem)\n        });\n    }\n\n    const countTotalPrice = (data) => {\n        let priceArray = []\n        data.forEach(({ price, count }) => {\n            const itemPrice = price * count\n            priceArray.push(itemPrice)\n        })\n        const res = priceArray.reduce((sum, num) => sum + num, 0)\n        modalPricetag.textContent = `${res}`\n    }\n\n    body.addEventListener('click', (e) => {\n        e.preventDefault\n\n        if (e.target.classList.contains('btn-inc')) {\n            incrementCount(e.target.dataset.index);\n        } else if (e.target.classList.contains('btn-dec')) {\n            decrementCount(e.target.dataset.index);\n        };\n    })\n\n    buttonSend.addEventListener('click', () => {\n        const cartArray = localStorage.getItem('cart')\n\n        fetch('https://jsonplaceholder.typicode.com/posts', {\n            method: 'POST',\n            body: cartArray\n        })\n            .then(response => {\n                if (response.ok) {\n                    resetCart()\n                }\n            })\n            .catch(e => {\n                console.error(e);\n            })\n    })\n\n    clearCart.addEventListener('click', () => {\n        resetCart()\n    })\n\n    buttonCart.addEventListener('click', () => {\n        if (localStorage.getItem('cart')) {\n            renderItems(JSON.parse(localStorage.getItem('cart')))\n            countTotalPrice(JSON.parse(localStorage.getItem('cart')))\n        }\n        modalCart.classList.add('is-open')\n    })\n\n    close.addEventListener('click', () => {\n        modalCart.classList.remove('is-open')\n    })\n}\n/* harmony default export */ const modules_cart = (cart);\n\n\n\n\n\n;// CONCATENATED MODULE: ./src/modules/menu.js\nconst menu = () => {\n\n    const cardsMenu = document.querySelector('.cards-menu')\n\n    const changeTitle = (restaurant) => {\n        const restaurantTitle = document.querySelector('.restaurant-title')\n        restaurantTitle.textContent = restaurant.name\n    }\n\n    const changeRating = (restaurant) => {\n        const restaurantRating = document.querySelector('.rating')\n        restaurantRating.textContent = restaurant.stars\n    }\n\n    const changePrice = (restaurant) => {\n        const restaurantPrice = document.querySelector('.price')\n        restaurantPrice.textContent = restaurant.price\n    }\n\n    const changeCategory = (restaurant) => {\n        const restaurantCategory = document.querySelector('.category')\n        restaurantCategory.textContent = restaurant.kitchen\n    }\n\n    const addToCart = (cartItem) => {\n        const cartArray = localStorage.getItem('cart') ?\n            JSON.parse(localStorage.getItem('cart')) : []\n\n        if (cartArray.some((item) => item.id === cartItem.id)) {\n            cartArray.map((item => {\n                if (item.id === cartItem.id) {\n                    item.count++\n                }\n                return item\n            }))\n        } else {\n            cartArray.push(cartItem)\n        }\n\n        localStorage.setItem('cart', JSON.stringify(cartArray))\n    }\n\n    const renderItems = (data) => {\n        data.forEach(({ description, id, image, name, price }) => {\n            const card = document.createElement('div')\n\n            card.classList.add('card')\n            card.innerHTML = `\n                <img src=\"${image}\" alt=\"${name}\" class=\"card-image\" />\n                <div class=\"card-text\">\n                    <div class=\"card-heading\">\n                        <h3 class=\"card-title card-title-reg\">${name}</h3>\n                    </div>\n                    <div class=\"card-info\">\n                        <div class=\"ingredients\">\n                        ${description}\n                        </div>\n                    </div>\n                    <div class=\"card-buttons\">\n                        <button class=\"button button-primary button-add-cart\">\n                            <span class=\"button-card-text\">В корзину</span>\n                            <span class=\"button-cart-svg\"></span>\n                        </button>\n                        <strong class=\"card-price-bold\">${price} ₽</strong>\n                    </div>\n                </div>\n            `\n\n            card.querySelector('.button-card-text').addEventListener('click', () => {\n                addToCart({ name, id, price, count: 1 })\n            })\n\n            cardsMenu.append(card)\n        });\n    }\n    if (localStorage.getItem('restaurant')) {\n        const restaurant = JSON.parse(localStorage.getItem('restaurant'))\n\n        changeTitle(restaurant)\n        changeRating(restaurant)\n        changePrice(restaurant)\n        changeCategory(restaurant)\n\n        fetch(`./db/${restaurant.products}`)\n            .then((response) => response.json())\n            .then((data) => {\n                renderItems(data);\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n    } else {\n        window.location.href = '/'\n    }\n}\n\n/* harmony default export */ const modules_menu = (menu);\n;// CONCATENATED MODULE: ./src/menu.js\n\n\n\n\nmodules_auth()\nmodules_cart()\nmodules_menu()\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///941\n")}},__webpack_exports__={};__webpack_modules__[941]()})();